import { dirname } from 'path';
import { fileURLToPath } from 'url';
import { FlatCompat } from '@eslint/eslintrc';
import unicornPlugin from 'eslint-plugin-unicorn';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends(
    'next/core-web-vitals',
    'next/typescript',
    'plugin:import/recommended',
    'plugin:import/typescript',
    'prettier'
  ),
  {
    ignores: [
      'src/lib/firebase-client.ts',
      'src/lib/firebase-config.ts',
      'src/lib/firebase-context.tsx',
      'src/app/modules/**',
    ],
  },
  {
    plugins: {
      unicorn: unicornPlugin,
    },
    rules: {
      'react/react-in-jsx-scope': 'off',
      'react/prop-types': 'off',
      'react/jsx-uses-react': 'off',
      'react/jsx-uses-vars': 'error',
      'import/order': [
        'warn',
        {
          groups: ['builtin', 'external', 'internal', 'parent', 'sibling', 'index'],
          alphabetize: {
            order: 'asc',
            caseInsensitive: true,
          },
        },
      ],
      'import/no-unresolved': 'off',
      'import/no-duplicates': 'warn',
      'import/no-case-sensitive': 'off',
      'prefer-const': 'warn',
      'no-var': 'warn',
      'no-console': 'off',
      'no-debugger': 'warn',
      'no-unused-vars': 'off',
      '@typescript-eslint/no-unused-vars': 'warn',
      '@typescript-eslint/no-explicit-any': 'off',
      '@typescript-eslint/no-var-requires': 'warn',
      quotes: ['warn', 'single', { avoidEscape: true }],
      semi: ['warn', 'always'],
      'prefer-template': 'warn',
      'object-shorthand': 'warn',
      'prefer-arrow-callback': 'warn',
      'unicorn/prefer-module': 'off',
      'unicorn/prevent-abbreviations': 'off',
      'unicorn/filename-case': 'off',
      'unicorn/no-null': 'off',
      'unicorn/prefer-ternary': 'off',
      'unicorn/no-array-for-each': 'off',
      'unicorn/prefer-array-some': 'warn',
      'unicorn/prefer-array-find': 'warn',
      'unicorn/prefer-array-index-of': 'warn',
      'unicorn/prefer-includes': 'warn',
      'unicorn/prefer-string-slice': 'warn',
      'unicorn/prefer-optional-catch-binding': 'warn',
      'unicorn/prefer-number-properties': 'warn',
      'unicorn/prefer-math-trunc': 'warn',
      'unicorn/prefer-date-now': 'warn',
      'unicorn/prefer-array-flat-map': 'warn',
      'unicorn/prefer-object-from-entries': 'warn',
      'unicorn/prefer-spread': 'warn',
      'unicorn/prefer-array-reduce': 'warn',
      'unicorn/prefer-query-selector': 'warn',
      'unicorn/throw-new-error': 'warn',
      'unicorn/error-message': 'warn',
      'unicorn/no-console-spaces': 'warn',
      'unicorn/no-hex-escape': 'warn',
      'unicorn/no-process-exit': 'warn',
      'unicorn/no-unreadable-array-destructuring': 'warn',
      'unicorn/no-unsafe-regex': 'warn',
      'unicorn/no-useless-undefined': 'warn',
      'unicorn/number-literal-case': 'warn',
      'unicorn/prefer-add-event-listener': 'warn',
      'unicorn/prefer-array-flat': 'warn',
      'unicorn/prefer-negative-index': 'warn',
      'unicorn/prefer-node-protocol': 'off',
      'unicorn/prefer-prototype-methods': 'warn',
      'unicorn/prefer-reflect-apply': 'warn',
      'unicorn/prefer-regexp-test': 'warn',
      'unicorn/prefer-set-has': 'warn',
      'unicorn/prefer-string-replace-all': 'warn',
      'unicorn/prefer-string-trim-start-end': 'warn',
      'unicorn/relative-url-style': 'warn',
      'unicorn/require-array-join-separator': 'warn',
      'unicorn/require-number-to-fixed-digits-argument': 'warn',
      'unicorn/require-post-message-target-origin': 'warn',
      'unicorn/string-content': 'warn',
      'unicorn/template-indent': 'warn',
      'unicorn/text-encoding-identifier-case': 'warn',
      'unicorn/better-regex': 'warn',
      'unicorn/catch-error-name': 'warn',
      'unicorn/consistent-destructuring': 'warn',
      'unicorn/consistent-function-scoping': 'warn',
      'unicorn/custom-error-definition': 'warn',
      'unicorn/empty-brace-spaces': 'warn',
      'unicorn/expiring-todo-comments': 'warn',
      'unicorn/explicit-length-check': 'warn',
      'unicorn/import-index': 'warn',
      'unicorn/import-style': 'warn',
      'unicorn/new-for-builtins': 'warn',
      'unicorn/no-array-callback-reference': 'warn',
      'unicorn/no-array-instanceof': 'warn',
      'unicorn/no-array-method-this-argument': 'warn',
      'unicorn/no-array-push-push': 'warn',
      'unicorn/no-await-expression-member': 'warn',
      'unicorn/no-document-cookie': 'warn',
      'unicorn/no-empty-file': 'warn',
      'unicorn/no-for-loop': 'warn',
      'unicorn/no-instanceof-array': 'warn',
      'unicorn/no-invalid-remove-event-listener': 'warn',
      'unicorn/no-lonely-if': 'warn',
      'unicorn/no-new-buffer': 'warn',
      'unicorn/no-object-as-default-parameter': 'warn',
      'unicorn/no-process-env': 'off',
      'unicorn/no-static-only-class': 'warn',
      'unicorn/no-thenable': 'warn',
      'unicorn/no-this-assignment': 'warn',
      'unicorn/no-typeof-undefined': 'warn',
      'unicorn/no-unnecessary-await': 'warn',
      'unicorn/no-unreadable-iife': 'warn',
      'unicorn/no-useless-array-destructuring': 'warn',
      'unicorn/no-useless-fallback-in-spread': 'warn',
      'unicorn/no-useless-length-check': 'warn',
      'unicorn/no-useless-promise-resolve-reject': 'warn',
      'unicorn/no-useless-spread': 'warn',
      'unicorn/no-useless-switch-case': 'warn',
      'unicorn/no-zero-fractions': 'warn',
      'unicorn/numeric-separators-style': 'warn',
      'unicorn/prefer-at': 'warn',
      'unicorn/prefer-blob-reading-methods': 'warn',
      'unicorn/prefer-code-point': 'warn',
      'unicorn/prefer-default-parameters': 'warn',
      'unicorn/prefer-json-parse-buffer': 'warn',
      'unicorn/prefer-logical-operator-over-ternary': 'warn',
      'unicorn/prefer-modern-dom-apis': 'warn',
      'unicorn/prefer-modern-math-apis': 'warn',
      'unicorn/prefer-type-error': 'warn',
    },
  },
];

export default eslintConfig;